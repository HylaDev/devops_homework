name: build_and_publish

on:
  pull_request:
    branches:
      - main

jobs:
  # Job pour les tests unitaires
  test-unitaires:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configuration de Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Installation des dépendances
        run: npm install
        working-directory: test

      - name: Exécution du test
        run: npm test
        working-directory: test

  # Job pour l'analyse statique du code
  analyse-statique:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configuration de Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Installation de Semgrep
        run: pip install semgrep

      - name: Exécution de Semgrep analysis
        run: semgrep --config auto

  # Job pour le scan de sécurité
  scan-securite:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configuration de Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Installation des dependances
        run: npm install

      - name: Install npm audit tool
        run: npm install -g npm-audit

      - name: Run npm audit
        run: npm audit --production
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Lint Dockerfile with Hadolint
      uses: hadolint/hadolint-action@v2
      with:
        dockerfile: Dockerfile

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install -y trivy

    - name: Scan Docker image with Trivy
      env:
        IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest
      run: trivy image $IMAGE_NAME